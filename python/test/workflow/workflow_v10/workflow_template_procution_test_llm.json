{
    "data": {
        "nodes": [
            {
                "id": "StartID",
                "type": "genericNode",
                "position": {
                    "x": 1,
                    "y": 1
                },
                "data": {
                    "type": "Start",
                    "node": {
                        "template": {
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "\nfrom typing import List, Dict, Union\n\nfrom langflow import CustomComponent\n# from .schemas import StartNode, StartNodeResponse, NodeData, TokenAndCost\n# from .utils import format_input_schemas_to_dict, NodeType\nfrom langflow.components.custom_components.schemas.workflow import StartNode\nfrom langflow.components.custom_components.utils import process_start_node\n\nclass Start(CustomComponent):\n    id = \"1\"\n    display_name = \"工作流-开始\"\n    description = \"Start Node\"\n\n    def build_config(self):\n        return {\n            \"start_node_schema\": {\n                \"display_name\": \"开始节点schemas\",\n                \"required\": False,\n                \"field_type\": \"dict\"\n            }\n        }\n\n    def build(\n        self,\n        start_node_schema: StartNode = None\n    ) -> Union[dict, Dict]:\n        # start_node_schema = {\n        #     \"flow_id\": \"1\",\n        #     \"node_id\": \"StartID\",\n        #     \"node_name\": \"StartName\",\n        #     \"input_schema\": {\n        #         \"inputParameters\": [\n        #             {\n        #                 \"name\": \"event\",\n        #                 \"input\": {\n        #                     \"type\": \"string\",\n        #                     \"schema\": None,\n        #                     \"value\": {\n        #                         \"type\": \"literal\",\n        #                         \"content\": \"分析安全事件\"\n        #                     }\n        #                 }\n        #             }\n        #         ]\n        #     }\n        # }\n        return process_start_node(start_node_schema=start_node_schema)",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "title_case": true
                            },
                            "start_node_schema": {
                                "type": "dict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {
                                    "flow_id": "1",
                                    "node_id": "StartID",
                                    "node_name": "StartName",
                                    "input_schema": {
                                        "inputParameters": [
                                            {
                                                "name": "user_input",
                                                "input": {
                                                    "type": "string",
                                                    "schema": null,
                                                    "value": {
                                                        "type": "literal",
                                                        "content": "start_content"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "start_node_schema",
                                "display_name": "输入节点schema",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "title_case": true
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "Start Node",
                        "base_classes": [
                            "dict",
                            "Dict"
                        ],
                        "display_name": "开始",
                        "documentation": "",
                        "custom_fields": {
                            "start_node_schema": null
                        },
                        "output_types": [
                            "dict",
                            "Dict"
                        ],
                        "field_formatters": {},
                        "beta": true
                    },
                    "id": "StartID"
                },
                "selected": false,
                "width": 1,
                "height": 1
            },
            {
                "id": "LLMID",
                "type": "genericNode",
                "position": {
                    "x": 1,
                    "y": 1
                },
                "data": {
                    "type": "LLM",
                    "node": {
                        "template": {
                            "prenode_inputs": {
                                "type": "Dict",
                                "required": true,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "prenode_inputs",
                                "display_name": "前置节点输入",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "title_case": true
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import List, Dict, Union\n\nfrom langflow import CustomComponent\n\n# from .schemas import LLMNode, LLMNodeResponse, NodeData, TokenAndCost\n# from .utils import (\n#     format_prenodes_data, \n#     format_input_schemas_to_dict,\n#     format_output_schemas_to_dict,\n#     safe_format_prompt,\n#     NodeType\n# )\n\nfrom langflow.components.custom_components.schemas.workflow import LLMNode\nfrom langflow.components.custom_components.utils import aprocess_llm_node\n\nclass LLM(CustomComponent):\n    id = \"3\"\n    display_name = \"工作流-LLM\"\n    description = \"LLM Node\"\n\n    def build_config(self):\n        return {\n            \"prenode_inputs\": {\n                \"display_name\": \"前置节点输入\",\n                \"required\": False,\n            },\n            \"llm_node_schema\": {\n                \"display_name\": \"LLM节点schemas\",\n                \"advanced\": False,\n                \"required\": False,\n                \"field_type\": \"dict\"\n            },\n        }\n\n    async def build(\n        self,\n        prenode_inputs: List[Dict] = [],\n        llm_node_schema: LLMNode = None\n    ) -> Union[dict, Dict]:\n        # llm_node_schema = {\n        #     \"flow_id\": \"1\",\n        #     \"node_id\": \"LLMID\",\n        #     \"prompt\": \"分析ip详情: {{ip_info}}\",\n        #     \"model_schema\": {\n        #         \"model_name\": \"qwen1.5-14b-chat\",\n        #         \"model_parameters\": {\n        #             \"temperature\": 0.5,\n        #             \"openai_api_key\": \"EMPTY\",\n        #             \"openai_base_url\": \"http://172.18.22.19:7002/v1\"\n        #         },\n        #         \"model_quota\": {\n        #             \"token_limit\": 4096,\n        #             \"token_resp\": 4000,\n        #             \"system_prompt_limit\": 3700\n        #         }\n        #     },\n        #     \"input_schema\": {\n        #         \"inputParameters\": [\n        #             {\n        #                 \"name\": \"ip_info\",\n        #                 \"input\": {\n        #                     \"type\": \"string\",\n        #                     \"schema\": None,\n        #                     \"value\": {\n        #                         \"type\": \"ref\",\n        #                         \"content\": {\n        #                             \"source_id\": \"ToolID\",\n        #                             \"name\": \"data\"\n        #                         }\n        #                     }\n        #                 }\n        #             }\n        #         ]\n        #     },\n        #     \"output_schema\": {\n        #         \"outputs\": [\n        #             {\n        #                 \"name\": \"llm_output\",\n        #                 \"type\": \"string\",\n        #                 \"schema\": None\n        #             }\n        #         ]\n        #     }\n        # }\n        return await aprocess_llm_node(prenode_inputs=prenode_inputs, llm_node_schema=llm_node_schema)",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "title_case": true
                            },
                            "llm_node_schema": {
                                "type": "dict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {
                                    "flow_id": "1",
                                    "node_id": "LLMID",
                                    "prompt": "输入: {{ip_info}}",
                                    "model_schema": {
                                        "model_name": "qwen1.5-14b-chat",
                                        "model_parameters": {
                                            "temperature": 0.5,
                                            "openai_api_key": "EMPTY",
                                            "openai_base_url": "http://172.18.22.19:7002/v1"
                                        },
                                        "model_quota": {
                                            "token_limit": 4096,
                                            "token_resp": 4000,
                                            "system_prompt_limit": 3700
                                        }
                                    },
                                    "input_schema": {
                                        "inputParameters": [
                                            {
                                                "name": "query",
                                                "input": {
                                                    "type": "string",
                                                    "schema": null,
                                                    "value": {
                                                        "type": "literal",
                                                        "content": "一句话讲一个笑话"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "output_schema": {
                                        "outputs": [
                                            {
                                                "name": "llm_output",
                                                "type": "string",
                                                "schema": null
                                            }
                                        ]
                                    }
                                },
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "llm_node_schema",
                                "display_name": "LLM节点shchema",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "title_case": true
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "LLM Node",
                        "base_classes": [
                            "dict",
                            "Dict"
                        ],
                        "display_name": "LLM",
                        "documentation": "",
                        "custom_fields": {
                            "prenode_inputs": null,
                            "llm_node_schema": null
                        },
                        "output_types": [
                            "dict",
                            "Dict"
                        ],
                        "field_formatters": {},
                        "beta": true
                    },
                    "id": "LLMID"
                },
                "selected": false,
                "width": 1,
                "height": 1,
                "positionAbsolute": {
                    "x": 1,
                    "y": 1
                },
                "dragging": false
            },
            {
                "id": "EndID",
                "type": "genericNode",
                "position": {
                    "x": 1,
                    "y": 1
                },
                "data": {
                    "type": "End",
                    "node": {
                        "template": {
                            "prenode_inputs": {
                                "type": "Dict",
                                "required": true,
                                "placeholder": "",
                                "list": true,
                                "show": true,
                                "multiline": false,
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "prenode_inputs",
                                "display_name": "前置节点原始输入",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "title_case": true
                            },
                            "code": {
                                "type": "code",
                                "required": true,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": true,
                                "value": "from typing import List, Dict\n\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Data\n\n# from .schemas import EndNode, EndNodeResponse, NodeData, TokenAndCost\n# from .utils import (\n#     format_prenodes_data, \n#     format_input_schemas_to_dict,\n#     NodeType,\n#     compute_tokens_by_transformers,\n#     format_tokens\n# )\n\nfrom langflow.components.custom_components.schemas.workflow import EndNode\nfrom langflow.components.custom_components.utils import process_end_node\n\nclass End(CustomComponent):\n    id = \"2\"\n    display_name = \"工作流-结束\"\n    description = \"End Node\"\n\n    def build_config(self):\n        return {\n            \"prenode_inputs\": {\n                \"display_name\": \"前置节点原始输入\",\n                \"required\": False,\n            },\n            \"end_node_schema\": {\n                \"display_name\": \"结束节点schema\",\n                \"required\": False,\n                \"field_type\": \"dict\"\n            }\n        }\n\n    def build(\n        self, \n        prenode_inputs: List[Dict] = [],\n        end_node_schema: EndNode = None\n    ) -> Data:\n        # end_node_schema = {\n        #     \"flow_id\": \"1\",\n        #     \"node_id\": \"EndID\",\n        #     \"node_name\": \"EndName\",\n        #     \"prompt\": \"Here is the {{variable}}\",\n        #     \"input_schema\": {\n        #         \"inputParameters\": [\n        #             {\n        #                 \"name\": \"ref_llm_output\",\n        #                 \"input\": {\n        #                     \"type\": \"string\",\n        #                     \"schema\": None,\n        #                     \"value\": {\n        #                         \"type\": \"ref\",\n        #                         \"content\": {\n        #                             \"source_id\": \"LLMID\",\n        #                             \"name\": \"llm_output\"\n        #                         }\n        #                     }\n        #                 }\n        #             }\n        #         ]\n        #     }\n        # }\n        return process_end_node(prenode_inputs=prenode_inputs, end_node_schema=end_node_schema)\n        ",
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "code",
                                "advanced": false,
                                "dynamic": true,
                                "info": "",
                                "title_case": true
                            },
                            "end_node_schema": {
                                "type": "dict",
                                "required": false,
                                "placeholder": "",
                                "list": false,
                                "show": true,
                                "multiline": false,
                                "value": {
                                    "flow_id": "1",
                                    "node_id": "EndID",
                                    "node_name": "EndName",
                                    "prompt": "Here is the {{variable}}",
                                    "input_schema": {
                                        "inputParameters": [
                                            {
                                                "name": "output",
                                                "input": {
                                                    "type": "string",
                                                    "schema": null,
                                                    "value": {
                                                        "type": "literal",
                                                        "content": "END"
                                                    }
                                                }
                                            }
                                        ]
                                    },
                                    "output_schema": {
                                        "outputs": [
                                            {
                                                "name": "output_name",
                                                "type": "string",
                                                "schema": null
                                            }
                                        ]
                                    }
                                },
                                "fileTypes": [],
                                "file_path": "",
                                "password": false,
                                "name": "end_node_schema",
                                "display_name": "结束节点schema",
                                "advanced": false,
                                "dynamic": false,
                                "info": "",
                                "title_case": true
                            },
                            "_type": "CustomComponent"
                        },
                        "description": "End Node",
                        "base_classes": [
                            "Data"
                        ],
                        "display_name": "结束",
                        "documentation": "",
                        "custom_fields": {
                            "prenode_inputs": null,
                            "end_node_schema": null
                        },
                        "output_types": [
                            "Data"
                        ],
                        "field_formatters": {},
                        "beta": true
                    },
                    "id": "EndID"
                },
                "selected": true,
                "width": 1,
                "height": 1,
                "positionAbsolute": {
                    "x": 1,
                    "y": 1
                },
                "dragging": false
            }
        ],
        "edges": [
            {
                "source": "StartID",
                "sourceHandle": "",
                "target": "LLMID",
                "targetHandle": "",
                "data": {
                    "targetHandle": {
                        "fieldName": "prenode_inputs",
                        "id": "",
                        "inputTypes": null,
                        "type": ""
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "",
                            ""
                        ],
                        "dataType": "",
                        "id": ""
                    }
                },
                "style": {
                    "stroke": ""
                },
                "className": "",
                "animated": false,
                "id": ""
            },
            {
                "source": "LLMID",
                "sourceHandle": "",
                "target": "EndID",
                "targetHandle": "",
                "data": {
                    "targetHandle": {
                        "fieldName": "prenode_inputs",
                        "id": "",
                        "inputTypes": null,
                        "type": ""
                    },
                    "sourceHandle": {
                        "baseClasses": [
                            "",
                            ""
                        ],
                        "dataType": "",
                        "id": ""
                    }
                },
                "style": {
                    "stroke": ""
                },
                "className": "",
                "animated": false,
                "id": ""
            }
        ],
        "viewport": {
            "x": 1,
            "y": 1,
            "zoom": 1
        }
    },
    "inputs": {},
    "tweaks": {},
    "clear_cache": true,
    "session_id": "",
    "sync": false
}